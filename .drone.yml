---
kind: secret
name: slack-webhook

get:
  path: drone-kubernetes-secrets-data
  name: slack-webhook
---
kind: pipeline
name: build-test

clone:
  depth: 50

volumes:
  - name: deps
    temp: {}

services:
  - name: postgres
    image: mdillon/postgis:11-alpine
    detach: true
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: paradev
      POSTGRES_PASSWORD: paradev

steps:
  - name: slack-notification-start-test
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack-webhook
      channel: ci
      username: drone
      template: >
        <{{ build.link }}|Build #{{ build.number }} started>
        <http://github.com/{{ repo.owner }}/{{ repo.name }}/tree/{{ build.branch }}|
        on {{ repo.name }}:{{ build.branch }}>
        by {{ build.author }}

  - name: postgres
    image: postgres:11.2
    detach: true
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong

  - name: kong_migration
    image: kong:1.2.2-alpine
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    commands:
      - apk add --update bash git
      - test/scripts/wait-for-it.sh -h 'postgres' -p 5432 -t 45
      - kong migrations bootstrap

  - name: kong
    image: kong:1.2.2-alpine
    detach: true
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444

  - name: build-modules
    image: golang:1.12.5-alpine3.9
    volumes:
      - name: deps
        path: /go
    commands:
      - apk add --update --no-cache git
      - go build -v ./...
      - go mod vendor

  - name: test
    image: golang:1.12.5-alpine3.9
    volumes:
      - name: deps
        path: /go
    depends_on:
      - build-modules
    commands:
      - apk add --update --no-cache alpine-sdk bash
      - go test -v ./...

  - name: slack-notification-finish-test
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack-webhook
      channel: ci
      username: drone
      template: >
        <{{ build.link }}|Build #{{ build.number }} {{ build.status }}>
        on <http://github.com/{{ repo.owner }}/{{ repo.name }}/tree/{{ build.branch }}|
        {{ repo.name }}:{{ build.branch }}> by @{{ build.author }}
    depends_on:
      - test
    when:
      status:
        - success
        - failure

