workspace:
  base: /go
  path: src/github.com/ParaServices/kong

git:
  image: plugins/git
  depth: 50

pipeline:
  notify_test_start:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: ci
    username: drone
    template: "<{{ build.link }}|Build #{{ build.number }} started> <http://github.com/{{ repo.owner }}/{{ repo.name }}/tree/{{ build.branch }}|on {{ repo.name }}:{{ build.branch }}> by {{ build.author }}"

  postgres:
    image: postgres:11.2
    detach: true
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong

  kong_migration:
    image: kong:0.14.1-alpine
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    commands:
      - apk add --update bash git
      - test/scripts/wait-for-it.sh -h 'postgres' -p 5432 -t 45
      - kong migrations up

  kong:
    image: kong:0.14.1-alpine
    detach: true
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444

  build:
    image: golang:1.11-stretch
    group: build_test
    commands:
      - go build -v ./...

  test:
    image: golang:1.11-alpine3.8
    group: build_test
    environment:
      KONG_URL: http://kong:8001
    commands:
      - apk add --update --no-cache bash alpine-sdk
      - test/scripts/wait-for-it.sh -h 'kong' -p 8001 -t 45
      - go test -v ./...

  notify_test_finish:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: ci
    username: drone
    template: "<{{ build.link }}|Build #{{ build.number }} {{ build.status }}> on <http://github.com/{{ repo.owner }}/{{ repo.name }}/tree/{{ build.branch }}|{{ repo.name }}:{{ build.branch }}> by @{{ build.author }}"
    when:
      status: [success, failure]
